{
  "name": "types",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "libs/types/src",
  "projectType": "library",
  "targets": {
    "build": {
      "executor": "@nx/js:swc",
      "dependsOn": [
        {
          "target": "build",
          "dependencies": true
        },
        "build:esm",
        "build:cjs"
      ],
      "outputs": ["{options.outputPath}"],
      "options": {
        "clean": false,
        "outputPath": "dist/libs/types",
        "main": "libs/types/src/index.ts",
        "tsConfig": "libs/types/tsconfig.lib.json",
        "assets": ["libs/types/*.md"]
      }
    },
    "build:esm": {
      "executor": "@nx/js:swc",
      "dependsOn": [
        {
          "target": "build",
          "dependencies": true
        }
      ],
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/libs/types/esm",
        "main": "libs/types/src/index.ts",
        "tsConfig": "libs/types/tsconfig.lib.json",
        "assets": ["libs/types/*.md"],
        "swcrc": "libs/types/.lib.esm.swcrc"
      }
    },
    "build:cjs": {
      "executor": "@nx/js:swc",
      "dependsOn": [
        {
          "target": "build",
          "dependencies": true
        }
      ],
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/libs/types/cjs",
        "main": "libs/types/src/index.ts",
        "tsConfig": "libs/types/tsconfig.lib.json",
        "assets": ["libs/types/*.md"],
        "swcrc": "libs/types/.lib.cjs.swcrc"
      }
    },
    "publish": {
      "executor": "@almaclaine/publish:publish",
      "dependsOn": ["build"]
    },
    "publish:upload": {
      "executor": "nx:run-commands",
      "options": {
        "command": "node tools/scripts/publish.cjs types {args.ver} {args.tag} {args.mfa}"
      },
      "dependsOn": ["build"]
    },
    "lint": {
      "executor": "@nx/eslint:lint",
      "outputs": ["{options.outputFile}"]
    },
    "test": {
      "executor": "@nx/vite:test",
      "outputs": ["{workspaceRoot}/coverage/libs/types"],
      "options": {
        "passWithNoTests": true,
        "reportsDirectory": "../../coverage/libs/types"
      }
    }
  },
  "tags": []
}
